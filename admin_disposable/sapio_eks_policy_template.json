{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "TfStateBucketList",
      "Effect": "Allow",
      "Action": ["s3:ListBucket"],
      "Resource": "arn:aws:s3:::terraform-state-bucket-eks-auto-sapio"
    },
    {
      "Sid": "TfStateBucketObjects",
      "Effect": "Allow",
      "Action": ["s3:GetObject", "s3:PutObject", "s3:DeleteObject"],
      "Resource": "arn:aws:s3:::terraform-state-bucket-eks-auto-sapio/*"
    },
    {
      "Sid": "TfLockTable",
      "Effect": "Allow",
      "Action": ["dynamodb:DescribeTable", "dynamodb:GetItem", "dynamodb:PutItem", "dynamodb:DeleteItem"],
      "Resource": "arn:aws:dynamodb:<<<REGION>>>:<<<ACCOUNT_ID>>>:table/terraform-lock"
    },
    {
      "Sid": "TfStateBucketMeta",
      "Effect": "Allow",
      "Action": ["s3:GetBucketLocation","s3:ListBucket"],
      "Resource": "arn:aws:s3:::terraform-state-bucket-eks-auto-sapio"
    },

    {
      "Sid": "VpcNetworking",
      "Effect": "Allow",
      "Action": [
        "ec2:CreateVpc","ec2:DeleteVpc","ec2:ModifyVpcAttribute","ec2:DescribeVpcs",
        "ec2:CreateSubnet","ec2:DeleteSubnet","ec2:DescribeSubnets",
        "ec2:CreateRouteTable","ec2:DeleteRouteTable","ec2:AssociateRouteTable","ec2:DisassociateRouteTable","ec2:CreateRoute","ec2:ReplaceRoute","ec2:DeleteRoute","ec2:DescribeRouteTables",
        "ec2:CreateInternetGateway","ec2:AttachInternetGateway","ec2:DetachInternetGateway","ec2:DeleteInternetGateway","ec2:DescribeInternetGateways",
        "ec2:AllocateAddress","ec2:ReleaseAddress","ec2:DescribeAddresses",
        "ec2:CreateNatGateway","ec2:DeleteNatGateway","ec2:DescribeNatGateways",
        "ec2:CreateSecurityGroup","ec2:DeleteSecurityGroup","ec2:AuthorizeSecurityGroupIngress","ec2:AuthorizeSecurityGroupEgress","ec2:RevokeSecurityGroupIngress","ec2:RevokeSecurityGroupEgress","ec2:DescribeSecurityGroups",
        "ec2:CreateTags","ec2:DeleteTags","ec2:DescribeAvailabilityZones","ec2:DescribeAccountAttributes",
        "ec2:DescribeVpcEndpoints","ec2:CreateVpcEndpoint","ec2:DeleteVpcEndpoints"
      ],
      "Resource": "*"
    },

    {
      "Sid": "EksAdmin",
      "Effect": "Allow",
      "Action": [
        "eks:CreateCluster","eks:DeleteCluster","eks:UpdateClusterConfig","eks:UpdateClusterVersion",
        "eks:DescribeCluster","eks:ListClusters","eks:TagResource","eks:UntagResource",
        "eks:CreateNodegroup","eks:UpdateNodegroupConfig","eks:UpdateNodegroupVersion","eks:DeleteNodegroup",
        "eks:DescribeNodegroup","eks:ListNodegroups",
        "eks:AssociateEncryptionConfig","eks:DisassociateIdentityProviderConfig","eks:AssociateIdentityProviderConfig"
      ],
      "Resource": "*"
    },
    {
      "Sid": "EksAddons",
      "Effect": "Allow",
      "Action": [
        "eks:CreateAddon","eks:UpdateAddon","eks:DeleteAddon",
        "eks:DescribeAddon","eks:ListAddons","eks:DescribeAddonVersions"
      ],
      "Resource": "*"
    },
    {
      "Sid": "IamManagedPoliciesCrud",
      "Effect": "Allow",
      "Action": [
        "iam:CreatePolicy","iam:DeletePolicy",
        "iam:CreatePolicyVersion","iam:DeletePolicyVersion","iam:ListPolicyVersions"
      ],
      "Resource": "arn:aws:iam::<<<ACCOUNT_ID>>>:policy/*"
    },

    {
      "Sid": "CreateEksServiceLinkedRoles",
      "Effect": "Allow",
      "Action": "iam:CreateServiceLinkedRole",
      "Resource": "*",
      "Condition": {
        "StringLike": {
          "iam:AWSServiceName": [
            "eks.amazonaws.com",
            "eks-nodegroup.amazonaws.com",
            "eks-fargate.amazonaws.com"
          ]
        }
      }
    },


    {
      "Sid": "Ec2ForEksNodes",
      "Effect": "Allow",
      "Action": [
        "ec2:CreateLaunchTemplate","ec2:CreateLaunchTemplateVersion","ec2:DeleteLaunchTemplate","ec2:DeleteLaunchTemplateVersions","ec2:DescribeLaunchTemplates","ec2:DescribeLaunchTemplateVersions",
        "ec2:DescribeImages","ec2:DescribeKeyPairs","ec2:DescribeInstanceTypes","ec2:GetEbsDefaultKmsKeyId",
        "autoscaling:DescribeAutoScalingGroups"
      ],
      "Resource": "*"
    },

    {
      "Sid": "IamCrudForEksAndNodes",
      "Effect": "Allow",
      "Action": [
        "iam:CreateRole","iam:DeleteRole","iam:AttachRolePolicy","iam:DetachRolePolicy",
        "iam:PutRolePolicy","iam:DeleteRolePolicy",
        "iam:TagRole","iam:UntagRole",
        "iam:CreateInstanceProfile","iam:AddRoleToInstanceProfile","iam:RemoveRoleFromInstanceProfile","iam:DeleteInstanceProfile",
        "iam:CreateOpenIDConnectProvider","iam:DeleteOpenIDConnectProvider","iam:TagOpenIDConnectProvider"
      ],
      "Resource": "*"
    },
    {
      "Sid": "PassOnlyApprovedRoles",
      "Effect": "Allow",
      "Action": ["iam:PassRole"],
      "Resource": [
        "arn:aws:iam::<<<ACCOUNT_ID>>>:role/eks-*",
        "arn:aws:iam::<<<ACCOUNT_ID>>>:role/cluster-*",
        "arn:aws:iam::<<<ACCOUNT_ID>>>:role/nodegroup-*"
      ]
    },

    {
      "Sid": "RdsAdmin",
      "Effect": "Allow",
      "Action": [
        "rds:CreateDBInstance","rds:DeleteDBInstance","rds:ModifyDBInstance","rds:RebootDBInstance","rds:StartDBInstance","rds:StopDBInstance",
        "rds:CreateDBInstanceReadReplica","rds:PromoteReadReplica",
        "rds:DescribeDBInstances","rds:ListTagsForResource","rds:AddTagsToResource","rds:RemoveTagsFromResource",
        "rds:CreateDBSubnetGroup","rds:DeleteDBSubnetGroup","rds:ModifyDBSubnetGroup","rds:DescribeDBSubnetGroups",
        "rds:CreateDBParameterGroup","rds:DeleteDBParameterGroup","rds:ModifyDBParameterGroup","rds:DescribeDBParameterGroups","rds:DescribeDBParameters"
      ],
      "Resource": "*"
    },

    {
      "Sid": "EcrPushPull",
      "Effect": "Allow",
      "Action": [
        "ecr:GetAuthorizationToken",
        "ecr:CreateRepository","ecr:DescribeRepositories","ecr:DeleteRepository","ecr:SetRepositoryPolicy","ecr:GetRepositoryPolicy","ecr:TagResource","ecr:UntagResource",
        "ecr:BatchCheckLayerAvailability","ecr:InitiateLayerUpload","ecr:UploadLayerPart","ecr:CompleteLayerUpload","ecr:PutImage","ecr:DescribeImages","ecr:BatchDeleteImage"
      ],
      "Resource": "*"
    },

    {
      "Sid": "Elbv2",
      "Effect": "Allow",
      "Action": [
        "elasticloadbalancing:CreateLoadBalancer","elasticloadbalancing:DeleteLoadBalancer","elasticloadbalancing:DescribeLoadBalancers",
        "elasticloadbalancing:CreateTargetGroup","elasticloadbalancing:DeleteTargetGroup","elasticloadbalancing:ModifyTargetGroup","elasticloadbalancing:DescribeTargetGroups",
        "elasticloadbalancing:RegisterTargets","elasticloadbalancing:DeregisterTargets",
        "elasticloadbalancing:CreateListener","elasticloadbalancing:DeleteListener","elasticloadbalancing:ModifyListener","elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:AddTags","elasticloadbalancing:RemoveTags"
      ],
      "Resource": "*"
    },

    {
      "Sid": "CwLogsBasics",
      "Effect": "Allow",
      "Action": [
        "logs:CreateLogGroup","logs:DescribeLogGroups","logs:PutRetentionPolicy"
      ],
      "Resource": "*"
    },

    {
      "Sid": "DescribesAndSts",
      "Effect": "Allow",
      "Action": [
        "ec2:Describe*","eks:Describe*","rds:Describe*","ecr:Describe*","iam:GetRole","iam:ListAttachedRolePolicies","iam:GetOpenIDConnectProvider",
        "sts:GetCallerIdentity"
      ],
      "Resource": "*"
    }
  ]
}