{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "TfS3FullAccess",
      "Effect": "Allow",
      "Action": ["s3:*"],
      "Resource": "arn:aws:s3:::*"
    },
    {
      "Sid": "TfLockTable",
      "Effect": "Allow",
      "Action": ["dynamodb:*"],
      "Resource": "arn:aws:dynamodb:us-east-1:<<<ACCOUNT_ID>>>:table/terraform-lock"
    },

    {
      "Sid": "VpcNetworking",
      "Effect": "Allow",
      "Action": [
        "ec2:*"
      ],
      "Resource": "*"
    },

    {
      "Sid": "EksAdmin",
      "Effect": "Allow",
      "Action": [
        "eks:*"
      ],
      "Resource": "*"
    },
    {
      "Sid": "IamManagedPoliciesCrud",
      "Effect": "Allow",
      "Action": [
        "iam:CreatePolicy","iam:DeletePolicy", "iam:TagPolicy", "iam:GetPolicy",
        "iam:CreatePolicyVersion","iam:DeletePolicyVersion","iam:ListPolicyVersions",
        "iam:GetPolicyVersion"
      ],
      "Resource": "arn:aws:iam::<<<ACCOUNT_ID>>>:policy/*"
    },

    {
      "Sid": "CreateEksServiceLinkedRoles",
      "Effect": "Allow",
      "Action": "iam:CreateServiceLinkedRole",
      "Resource": "*",
      "Condition": {
        "StringLike": {
          "iam:AWSServiceName": [
            "eks.amazonaws.com",
            "eks-nodegroup.amazonaws.com",
            "eks-fargate.amazonaws.com"
          ]
        }
      }
    },
    {
      "Sid": "Autoscaling",
      "Effect": "Allow",
      "Action": [
        "autoscaling:*"
      ],
      "Resource": "*"
    },

    {
      "Sid": "IamCrudForEksAndNodes",
      "Effect": "Allow",
      "Action": [
        "iam:CreateRole","iam:DeleteRole","iam:AttachRolePolicy","iam:DetachRolePolicy",
        "iam:PutRolePolicy","iam:DeleteRolePolicy",
        "iam:TagRole","iam:UntagRole",
        "iam:CreateInstanceProfile","iam:AddRoleToInstanceProfile","iam:RemoveRoleFromInstanceProfile","iam:DeleteInstanceProfile",
        "iam:CreateOpenIDConnectProvider","iam:DeleteOpenIDConnectProvider","iam:TagOpenIDConnectProvider",
        "iam:ListInstanceProfilesForRole", "iam:TagInstanceProfile", "iam:GetInstanceProfile", "iam:ListOpenIDConnectProviders"
      ],
      "Resource": "*"
    },
    {
      "Sid": "PassOnlyApprovedRoles",
      "Effect": "Allow",
      "Action": ["iam:PassRole"],
      "Resource": [
        "arn:aws:iam::<<<ACCOUNT_ID>>>:role/eks*",
        "arn:aws:iam::<<<ACCOUNT_ID>>>:role/cluster*",
        "arn:aws:iam::<<<ACCOUNT_ID>>>:role/nodegroup*",
        "arn:aws:iam::<<<ACCOUNT_ID>>>:role/sapio-bls*"
      ]
    },
    {
      "Sid": "RdsAdmin",
      "Effect": "Allow",
      "Action": [
        "rds:CreateDBInstance","rds:DeleteDBInstance","rds:ModifyDBInstance","rds:RebootDBInstance","rds:StartDBInstance","rds:StopDBInstance",
        "rds:CreateDBInstanceReadReplica","rds:PromoteReadReplica",
        "rds:DescribeDBInstances","rds:ListTagsForResource","rds:AddTagsToResource","rds:RemoveTagsFromResource",
        "rds:CreateDBSubnetGroup","rds:DeleteDBSubnetGroup","rds:ModifyDBSubnetGroup","rds:DescribeDBSubnetGroups",
        "rds:CreateDBParameterGroup","rds:DeleteDBParameterGroup","rds:ModifyDBParameterGroup","rds:DescribeDBParameterGroups","rds:DescribeDBParameters",
        "rds:CreateDBSnapshot"
      ],
      "Resource": "*"
    },

    {
      "Sid": "EcrPushPull",
      "Effect": "Allow",
      "Action": [
        "ecr:GetAuthorizationToken","ecr:PutLifecyclePolicy","ecr:ReplicateImage","ecr:UpdatePullThroughCacheRule","ecr:StartImageScan","ecr:PutAccountSetting",
        "ecr:PutImageTagMutability","ecr:PutReplicationConfiguration","ecr:PutImageScanningConfiguration","ecr:PutRegistryScanningConfiguration",
        "ecr:PutRegistryPolicy",
        "ecr:CreateRepository","ecr:DescribeRepositories","ecr:DeleteRepository","ecr:SetRepositoryPolicy","ecr:GetRepositoryPolicy","ecr:TagResource","ecr:UntagResource",
        "ecr:BatchCheckLayerAvailability","ecr:InitiateLayerUpload","ecr:UploadLayerPart","ecr:CompleteLayerUpload","ecr:PutImage","ecr:DescribeImages",
        "ecr:BatchGetImage","ecr:BatchGetRepositoryScanningConfiguration","ecr:DescribeImageScanFindings","ecr:DescribeRegistry","ecr:GetAccountSetting",
        "ecr:DescribeRepositoryCreationTemplates","ecr:GetDownloadUrlForLayer","ecr:GetImageCopyStatus","ecr:GetRegistryPolicy","ecr:GetLifecyclePolicyPreview",
        "ecr:GetRegistryScanningConfiguration","ecr:ValidatePullThroughCacheRule"
      ],
      "Resource": "*"
    },

    {
      "Sid": "Elbv2",
      "Effect": "Allow",
      "Action": [
        "elasticloadbalancing:*"
      ],
      "Resource": "*"
    },

    {
      "Sid": "SecretManagement",
      "Effect": "Allow",
      "Action": [
        "kms:DescribeKey", "kms:CreateGrant", "kms:Decrypt", "kms:GenerateDataKey",
        "kms:TagResource", "kms:CreateKey", "kms:CreateAlias", "kms:ListAliases",
        "kms:ListKeys", "kms:EnableKeyRotation", "kms:PutKeyPolicy",
        "kms:DeleteAlias",
        "secretsmanager:GetSecretValue", "secretsmanager:DescribeSecret",
        "secretsmanager:CreateSecret", "secretsmanager:TagResource"
      ],
      "Resource": "*"
    },

    {
      "Sid": "CwLogsBasics",
      "Effect": "Allow",
      "Action": [
        "logs:CreateLogGroup","logs:DescribeLogGroups","logs:PutRetentionPolicy",
        "logs:TagResource", "logs:ListTagsForResource", "logs:DeleteLogGroup",
        "logs:CreateLogStream","logs:PutLogEvents",
        "logs:DescribeLogStreams","logs:GetLogEvents","logs:FilterLogEvents"
      ],
      "Resource": "*"
    },

    {
      "Sid": "DescribesAndSts",
      "Effect": "Allow",
      "Action": [
        "ec2:Describe*","eks:Describe*","rds:Describe*","ecr:Describe*","iam:GetRole",
        "iam:ListAttachedRolePolicies","iam:GetOpenIDConnectProvider", "iam:ListRolePolicies",
        "sts:GetCallerIdentity","ssm:GetParameter"
      ],
      "Resource": "*"
    }
  ]
}